### 1 Question
Create Customers table with (CustomerID, FirstName, LastName, Email, Phone) and Orders table with (OrderID, CustomerID, OrderDate, TotalAmount) columns.
Relationship:
  1. Define a foreign key relationship between the CustomerID column in the Orders table and the CustomerID column in the Customers table.
  2. Ensure that when a customer is deleted from the Customers table, all associated orders are automatically deleted from the Orders table.
Filling table data:
  1. Insert three customers into the Customers table with sample data.
  2. Insert five orders into the Orders table, ensuring they are associated with existing customers.

### 1 Answer
CREATE TABLE Customers (
    CustomerID serial PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(20)
);

CREATE TABLE Orders (
    OrderID serial PRIMARY KEY,
    CustomerID INT REFERENCES Customers(CustomerID) ON delete cascade,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2)
  );

INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone)
VALUES
(1, 'Nazarov', 'Muhammad', 'nazarovm@gmail.com', '+992-918-6116-20'),
(2, 'Nodir', 'Qurbonov', 'nodirq@gmail.com', '555-5678'),
(3, 'Alice', 'Johnson', 'alice.johnson@example.com', '555-9012');

-- Insert sample data into Orders table
INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)
VALUES
(1,1,'2024-01-10', 100.00),
(2,1,'2024-02-11', 150.00),
(3,2,'2024-03-12', 75.50),
(4,3,'2024-04-13', 200.00),
(5,3,'2024-05-11', 120.75);












### 2 Question
Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA. The CITY table is described as follows: 

Запросите все столбцы для всех американских городов в таблице CITY с населением более 100 000 человек. Код страны для Америки — USA. Таблица CITY описывается следующим образом:

Sample table: CITY(ID, NAME, COUNTRY_CODE, ZIP_CODE)
| ID    |     NAME     |CODE |   POP   |
--------+--------------+-----+---------+
|  1    | New York     | USA | 8500000 |
|  2    | Los Angeles  | USA | 3990000 |
|  3    | Chicago      | USA | 2716000 |
|  4    | Houston      | USA | 2328000 |
|  5    | Phoenix      | USA | 1680000 |
|  6    | Philadelphia | USA | 1584000 |
|  7    | San Antonio  | USA | 1544000 |
|  8    | San Diego    | USA | 1407000 |
|  9    | Dallas       | USA | 1341000 |
|  10   | San Jose     | USA | 1035000 |

### 2 Answer 
SELECT * FROM CITY
WHERE COUNTRY_CODE = 'USA' AND POP > 100000;














### 3 Question
Query a list of CITY and STATE from the STATION table. The STATION table is described as follows: 

Запросите список CITY и STATE из таблицы STATION. Таблица STATION описывается следующим образом:

Sample table: STATION(ID, CITY, STATE, ZIP_CODE)

| ID    |     CITY     |STATE |   ZIP_CODE   |
--------+--------------+------+--------------+
|  1    | New York     | NY   |    10001     |
|  2    | Los Angeles  | CA   |    90001     |
|  3    | Chicago      | IL   |    60601     |
|  4    | Houston      | TX   |    77001     |
|  5    | Phoenix      | AZ   |    85001     |
|  6    | Philadelphia | PA   |    19101     |
|  7    | San Antonio  | TX   |    78201     |
|  8    | San Diego    | CA   |    92101     |
|  9    | Dallas       | TX   |    75201     |
|  10   | San Jose     | CA   |    95101     |

### 3 Answer
SELECT city,state from STATION;














### 4 Question
Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer. The STATION table is described as follows:

Запросите список названий CITY у STATION для городов, имеющих четный идентификационный номер. Выведите результаты в любом порядке, но исключите из ответа дубликаты. Таблица STATION описывается следующим образом:

Sample table: STATION(ID, CITY, STATE, ZIP_CODE)

| ID    |     CITY     |STATE |   ZIP_CODE   |
--------+--------------+------+--------------+
|  1    | New York     | NY   |    10001     |
|  2    | Los Angeles  | CA   |    90001     |
|  3    | Chicago      | IL   |    60601     |
|  4    | Houston      | TX   |    77001     |
|  5    | Phoenix      | AZ   |    85001     |
|  6    | Philadelphia | PA   |    19101     |
|  7    | San Antonio  | TX   |    78201     |
|  8    | San Diego    | CA   |    92101     |
|  9    | Dallas       | TX   |    75201     |
|  10   | San Jose     | CA   |    95101     |

### 4 Answer
SELECT DISTINCT CITY FROM STATION
WHERE ID % 2 = 0;













### 5 Question
Build a Nobel class. An instance is already created for you and instance attributes are included inside the print. Take those clues and try to reverse engineer the class.  Implement string representation of a class object using str method inside the class.

Создайте Nobel класс. Экземпляр уже создан для вас, и атрибуты экземпляра включены в результат print. Воспользуйтесь этими подсказками и попытайтесь спроектировать класс. Реализуйте строковое представление объекта класса, используя метод str внутри класса.
```
class Nobel:
    pass

np2005=Nobel("Peace", 2005, "Muhammad Yunus")
print(np2005.category, np2005.year, np2005.winner)

### 5 Answer
class Nobel:
    
    def __init__(self,category,year,name):
        self.category = category
        self.year = year
        self.name = name
        
    def __str__(self):
         return f"{self.category},{self.year}, {self.name}"
     
np2007 = Nobel('Peace',2007,'Muhammad Nazarov')
print(np2007)













### 6 Question
Write a program to create a child class Teacher that will inherit the properties and methods from the parent class Staff. Staff class has role, departament and salary attributes.

Напишите программу для создания дочернего класса Teacher, который будет наследовать свойства и методы родительского класса Staff. Класс Staff имеет атрибуты role, departament и salary.

### 7 Answer
class Staff:
    
    def __init__(self,role,departament,salary):
        self.role = role
        self.departament = departament
        self.salary = salary
           
    def __str__(self):
      return f"{self.role},{self.departament}, {self.salary}"
  
class Teacher(Staff):
    pass

S = Staff('developer Python','Oficce',15000)
print(S)
T = Teacher('Programist','School',10000)  
print(T)
















### 8 Question
Given an integer n, return a string array answer (1-indexed) where:
    answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
    answer[i] == "Fizz" if i is divisible by 3.
    answer[i] == "Buzz" if i is divisible by 5.
    answer[i] == i (as a string) if none of the above conditions are true.

Учитывая целое число n, верните ответ в виде массива строк (с индексом 1), где:
     ответ[i] == "FizzBuzz", если i делится на 3 и 5.
     ответ[i] == "Шипение", если i делится на 3.
     ответ[i] == "Buzz", если i делится на 5.
     ответ[i] == i (как строка), если ни одно из вышеуказанных условий не верно.

#### Example 1:
    Input: n = 3
    Output: ["1","2","Fizz"]

#### Example 2:
    Input: n = 5
    Output: ["1","2","Fizz","4","Buzz"]

#### Example 3:
    Input: n = 15
    Output: ["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]

### 8 Answer
a = int(input())
fb = []
for i in range(1,a):
    if i%3 == 0 and 1%5 == 0:
        fb.append("fizzbuzz")
    elif i%3 == 0:
        fb.append("Fizz") 
    elif i%5 == 0:
        fb.append("Buzz")
    else:
        fb.append(i)














### 9 Question
Write an algorithm to determine if a number n is happy.
A happy number is a number defined by the following process:
    1. Starting with any positive integer, replace the number by the sum of the squares of its digits.
    2. Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
    3. Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

Напишите алгоритм, определяющий, является ли число n счастливым.

Счастливое число — это число, определяемое следующим процессом:
     1. Начиная с любого положительного целого числа, замените число суммой квадратов его цифр.
     2. Повторяйте процесс до тех пор, пока число не станет равным 1 (где оно и останется), или пока он не зациклится в цикле, не включающем 1.
     3. Счастливыми являются те числа, для которых этот процесс заканчивается на 1.

Возвращайте true, если n — счастливое число, и false, если нет.

#### Example 1:
    Input: n = 19
    Output: true
    Explanation:
        1**2 + 9**2 = 82
        8**2 + 2**2 = 68
        6**2 + 8**2 = 100
        1**2 + 0**2 + 0**2 = 1

#### Example 2:
    Input: n = 2
    Output: false

 #### 9 Answer
 


